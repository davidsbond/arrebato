// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: arrebato/consumer/service/v1/service.proto

// Package arrebato.consumer.service.v1 provides the schema for the ConsumerService, which is used to manage the state
// of topic consumers.

package consumersvc

import (
	v1 "github.com/davidsbond/arrebato/internal/proto/arrebato/consumer/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The SetTopicIndexRequest message is the request DTO when calling ConsumerService.SetTopicIndex. It describes current
// index of a consumer within a topic.
type SetTopicIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicIndex *v1.TopicIndex `protobuf:"bytes,1,opt,name=topic_index,json=topicIndex,proto3" json:"topic_index,omitempty"`
}

func (x *SetTopicIndexRequest) Reset() {
	*x = SetTopicIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arrebato_consumer_service_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTopicIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTopicIndexRequest) ProtoMessage() {}

func (x *SetTopicIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arrebato_consumer_service_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTopicIndexRequest.ProtoReflect.Descriptor instead.
func (*SetTopicIndexRequest) Descriptor() ([]byte, []int) {
	return file_arrebato_consumer_service_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *SetTopicIndexRequest) GetTopicIndex() *v1.TopicIndex {
	if x != nil {
		return x.TopicIndex
	}
	return nil
}

// The SetTopicIndexResponse message is the response DTO when calling ConsumerService.SetTopicIndex.
type SetTopicIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTopicIndexResponse) Reset() {
	*x = SetTopicIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arrebato_consumer_service_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTopicIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTopicIndexResponse) ProtoMessage() {}

func (x *SetTopicIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arrebato_consumer_service_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTopicIndexResponse.ProtoReflect.Descriptor instead.
func (*SetTopicIndexResponse) Descriptor() ([]byte, []int) {
	return file_arrebato_consumer_service_v1_service_proto_rawDescGZIP(), []int{1}
}

var File_arrebato_consumer_service_v1_service_proto protoreflect.FileDescriptor

var file_arrebato_consumer_service_v1_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x72, 0x72, 0x65, 0x62, 0x61, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x61, 0x72,
	0x72, 0x65, 0x62, 0x61, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x61, 0x72, 0x72, 0x65,
	0x62, 0x61, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x59, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x72, 0x72, 0x65, 0x62, 0x61, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0a,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x8b, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x2e, 0x61, 0x72, 0x72, 0x65, 0x62,
	0x61, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61,
	0x72, 0x72, 0x65, 0x62, 0x61, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x61, 0x76, 0x69, 0x64, 0x73, 0x62, 0x6f, 0x6e, 0x64, 0x2f, 0x61, 0x72, 0x72, 0x65, 0x62,
	0x61, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x72, 0x72, 0x65, 0x62, 0x61, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_arrebato_consumer_service_v1_service_proto_rawDescOnce sync.Once
	file_arrebato_consumer_service_v1_service_proto_rawDescData = file_arrebato_consumer_service_v1_service_proto_rawDesc
)

func file_arrebato_consumer_service_v1_service_proto_rawDescGZIP() []byte {
	file_arrebato_consumer_service_v1_service_proto_rawDescOnce.Do(func() {
		file_arrebato_consumer_service_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_arrebato_consumer_service_v1_service_proto_rawDescData)
	})
	return file_arrebato_consumer_service_v1_service_proto_rawDescData
}

var file_arrebato_consumer_service_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_arrebato_consumer_service_v1_service_proto_goTypes = []interface{}{
	(*SetTopicIndexRequest)(nil),  // 0: arrebato.consumer.service.v1.SetTopicIndexRequest
	(*SetTopicIndexResponse)(nil), // 1: arrebato.consumer.service.v1.SetTopicIndexResponse
	(*v1.TopicIndex)(nil),         // 2: arrebato.consumer.v1.TopicIndex
}
var file_arrebato_consumer_service_v1_service_proto_depIdxs = []int32{
	2, // 0: arrebato.consumer.service.v1.SetTopicIndexRequest.topic_index:type_name -> arrebato.consumer.v1.TopicIndex
	0, // 1: arrebato.consumer.service.v1.ConsumerService.SetTopicIndex:input_type -> arrebato.consumer.service.v1.SetTopicIndexRequest
	1, // 2: arrebato.consumer.service.v1.ConsumerService.SetTopicIndex:output_type -> arrebato.consumer.service.v1.SetTopicIndexResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_arrebato_consumer_service_v1_service_proto_init() }
func file_arrebato_consumer_service_v1_service_proto_init() {
	if File_arrebato_consumer_service_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arrebato_consumer_service_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTopicIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arrebato_consumer_service_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTopicIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arrebato_consumer_service_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arrebato_consumer_service_v1_service_proto_goTypes,
		DependencyIndexes: file_arrebato_consumer_service_v1_service_proto_depIdxs,
		MessageInfos:      file_arrebato_consumer_service_v1_service_proto_msgTypes,
	}.Build()
	File_arrebato_consumer_service_v1_service_proto = out.File
	file_arrebato_consumer_service_v1_service_proto_rawDesc = nil
	file_arrebato_consumer_service_v1_service_proto_goTypes = nil
	file_arrebato_consumer_service_v1_service_proto_depIdxs = nil
}

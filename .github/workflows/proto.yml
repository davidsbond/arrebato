name: proto
on:
  push:
    paths:
      - '**.proto'
    branches:
      - master
  pull_request:
    paths:
      - '**.proto'

jobs:
  generate:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          make install-buf
          make install-protoc-plugins

      - name: Generate proto files
        run: make proto-generate

      - name: Check for uncommitted changes
        run: |
          git add .
          git diff --staged --exit-code

  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          make install-buf
          make install-protoc-plugins

      - name: Lint proto files
        run: make proto-lint

  breaking:
    needs:
      - lint
      - generate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          make install-buf
          make install-protoc-plugins

      - name: Check for breaking changes
        run: make proto-breaking

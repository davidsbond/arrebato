name: go
on:
  push:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
    branches:
      - master
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'

jobs:
  test:
    runs-on: ubuntu-20.04
    needs: mod
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: make test

  test-e2e:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run end-to-end tests
        run: make test-e2e

  lint:
    needs: mod
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: make install-golangci-lint

      - name: Lint
        run: make lint

  mod:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: make install-tools

      - name: Tidy modules
        run: go mod tidy

      - name: Check for uncommitted changes
        run: |
          git add .
          git diff --staged --exit-code

  format:
    needs: mod
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: make install-gofumpt

      - name: Format
        run: make format

      - name: Check for uncommitted changes
        run: |
          git add .
          git diff --staged --exit-code

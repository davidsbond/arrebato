syntax = "proto3";

// Package arrebato.node.service.v1 provides the schema for the NodeService, which is used to describe nodes within the
// cluster.
package arrebato.node.service.v1;

import "arrebato/node/v1/node.proto";

option go_package = "github.com/davidsbond/arrebato/internal/proto/arrebato/node/service/v1;nodesvc";

// The NodeService is a gRPC service that can introspects node information.
service NodeService {
  // Describe the Node.
  rpc Describe(DescribeRequest) returns (DescribeResponse);
  // Watch for changes to the node, including leadership status and new peers. Updates are written to the returned
  // stream.
  rpc Watch(WatchRequest) returns (stream WatchResponse);
  // Backup the node state, streaming the byte contents back to the client.
  rpc Backup(BackupRequest) returns (stream BackupResponse);
}

// The DescribeRequest message is the request DTO when calling NodeService.Describe.
message DescribeRequest {}

// The DescribeResponse message is the response DTO when calling NodeService.Describe. It contains node details.
message DescribeResponse {
  // Information about the queried node.
  arrebato.node.v1.Node node = 1;
}

// The WatchRequest message is the request DTO when calling NodeService.Watch.
message WatchRequest {}

// The WatchResponse message is the response DTO when calling NodeService.Watch. It contains node details.
message WatchResponse {
  // Information about the watched node.
  arrebato.node.v1.Node node = 1;
}

// The BackupRequest message is the request DTO when calling NodeService.Backup.
message BackupRequest {}

// The BackupResponse message is the response DTO when calling NodeService.Backup. It contains some of the byte
// content of the backup.
message BackupResponse {
  bytes data = 1;
}

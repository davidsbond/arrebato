syntax = "proto3";

package arrebato.raft.service.v1;

import "arrebato/raft/v1/raft.proto";

option go_package = "github.com/davidsbond/arrebato/internal/proto/raft/service/v1;raftsvc";

service RaftService {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc TimeoutNow(TimeoutNowRequest) returns (TimeoutNowResponse);
  rpc InstallSnapshot(stream InstallSnapshotRequest) returns (InstallSnapshotResponse);
}

message AppendEntriesRequest {
  uint64 term = 1;
  bytes leader = 2;
  uint64 prev_log_entry = 3;
  uint64 prev_log_term = 4;
  repeated arrebato.raft.v1.Log entries = 5;
  uint64 leader_commit_index = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  uint64 last_log = 2;
  bool success = 3;
  bool no_retry_backoff = 4;
}

message RequestVoteRequest {
  uint64 term = 1;
  bytes candidate = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
  bool leadership_transfer = 5;
}

message RequestVoteResponse {
  uint64 term = 1;
  bytes peers = 2;
  bool granted = 3;
}

message TimeoutNowRequest {}

message TimeoutNowResponse {}

message InstallSnapshotRequest {
  uint64 term = 1;
  bytes leader = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
  bytes peers = 5;
  bytes configuration = 6;
  uint64 configuration_index = 7;
  int64 size = 8;
  bytes data = 9;
  int64 snapshot_version = 10;
}

message InstallSnapshotResponse {
  uint64 term = 1;
  bool success = 2;
}
